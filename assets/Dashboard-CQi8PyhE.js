const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/DashboardHeader-Dz3rGpWi.js","assets/index-TjqRyAN5.js","assets/index-72cCgyYm.css","assets/DashboardHeader-D24b72Om.css","assets/DashboardOverview-DF4rIS1o.js","assets/DashboardOverview-CKZuccyb.css","assets/DashboardAnalyses-BJM_-KpC.js","assets/DashboardAnalyses-CV1Fgm7i.css","assets/DashboardPerimeter-oiNHQ2gD.js","assets/DashboardPerimeter-C8nMFgNY.css","assets/ChartBar-D-Ly79OQ.js","assets/index-BOmq-Au4.js","assets/ChartBar-BV0X2TvK.css","assets/ChartDonut-CUAMeYmq.js","assets/ChartDonut-DC8kbzmI.css"])))=>i.map(i=>d[i]);
import{r as O,c as u,o as c,a as _,b as s,u as o,d as z,w as m,e as f,_ as h,F as D,f as E,g,h as C}from"./index-TjqRyAN5.js";const V="black",L="#5de2a0",y={TekkareColorBlack:V,TekkareColorSuccess:L},M=(p,k)=>{const v=p.__vccOpts||p;for(const[S,i]of k)v[S]=i;return v},N={class:"dashboard"},R={class:"chart-donut-container"},$={key:0},F={class:"chart-donut-container"},j={key:0},I={__name:"Dashboard",props:{data:{type:Object}},setup(p){const k=f(()=>h(()=>import("./DashboardHeader-Dz3rGpWi.js"),__vite__mapDeps([0,1,2,3]))),v=f(()=>h(()=>import("./DashboardOverview-DF4rIS1o.js"),__vite__mapDeps([4,1,2,5]))),S=f(()=>h(()=>import("./DashboardAnalyses-BJM_-KpC.js"),__vite__mapDeps([6,1,2,7]))),i=f(()=>h(()=>import("./DashboardPerimeter-oiNHQ2gD.js"),__vite__mapDeps([8,1,2,9]))),H=f(()=>h(()=>import("./ChartBar-D-Ly79OQ.js"),__vite__mapDeps([10,11,1,2,12]))),b=f(()=>h(()=>import("./ChartDonut-CUAMeYmq.js"),__vite__mapDeps([13,11,1,2,14]))),T=O(""),n=u(()=>{if(p.data&&T.value){let e=[];return p.data.forEach(a=>{let t={...a};const r=a.monthlyPerformance.slice(-T.value);t.monthlyPerformance=r,e.push(t)}),e}}),B=u(()=>{if(n.value){let e={totalPatients:null,totalTreatments:null,totalTreatmentsSuccess:null,totalHospitalizations:null,totalHospitalizationsSuccess:null};return n.value.forEach(a=>{a.monthlyPerformance.forEach(t=>{e.totalPatients+=t.totalPatients,e.totalTreatments+=t.totalTreatments,e.totalTreatmentsSuccess+=t.totalTreatmentsSuccess,e.totalHospitalizations+=t.totalHospitalizations,e.totalHospitalizationsSuccess+=t.totalHospitalizationsSuccess})}),e}}),l=u(()=>{if(n.value)return n.value[0].monthlyPerformance.map((a,t)=>{const r={month:a.month,year:a.year,totalPatients:null,totalTreatments:null,totalTreatmentsSuccess:null,totalHospitalizations:null,totalHospitalizationsSuccess:null};return n.value.forEach(d=>{r.totalPatients+=d.monthlyPerformance[t].totalPatients,r.totalTreatments+=d.monthlyPerformance[t].totalTreatments,r.totalTreatmentsSuccess+=d.monthlyPerformance[t].totalTreatmentsSuccess,r.totalHospitalizations+=d.monthlyPerformance[t].totalHospitalizations,r.totalHospitalizationsSuccess+=d.monthlyPerformance[t].totalHospitalizationsSuccess}),r})}),w=u(()=>{if(l.value){const e=new Array(12-l.value.length).fill(null);l.value.forEach(t=>e.push(t.totalTreatments));const a=new Array(12-l.value.length).fill(null);return l.value.forEach(t=>a.push(t.totalTreatmentsSuccess)),[{label:"Treatments",backgroundColor:`${y.TekkareColorBlack}`,data:e},{label:"Successful treatments",backgroundColor:`${y.TekkareColorSuccess}`,data:a}]}}),A=u(()=>{if(l.value){const e=new Array(12-l.value.length).fill(null);l.value.forEach(t=>e.push(t.totalHospitalizations));const a=new Array(12-l.value.length).fill(null);return l.value.forEach(t=>a.push(t.totalHospitalizationsSuccess)),[{label:"Treatments",backgroundColor:`${y.TekkareColorBlack}`,data:e},{label:"Successful treatments",backgroundColor:`${y.TekkareColorSuccess}`,data:a}]}}),P=u(()=>{if(n.value)return n.value.map(e=>{let a={department:e.department,totalPerformance:{totalPatients:null,totalTreatments:null,totalTreatmentsSuccess:null,totalHospitalizations:null,totalHospitalizationsSuccess:null}};return e.monthlyPerformance.forEach(t=>{a.totalPerformance.totalPatients+=t.totalPatients,a.totalPerformance.totalTreatments+=t.totalTreatments,a.totalPerformance.totalTreatmentsSuccess+=t.totalTreatmentsSuccess,a.totalPerformance.totalHospitalizations+=t.totalHospitalizations,a.totalPerformance.totalHospitalizationsSuccess+=t.totalHospitalizationsSuccess}),a})});return(e,a)=>(c(),_("div",N,[s(o(k),{modelValue:T.value,"onUpdate:modelValue":a[0]||(a[0]=t=>T.value=t)},null,8,["modelValue"]),z("main",null,[s(o(v),{stats:B.value},null,8,["stats"]),s(o(S),{title:"Treatments"},{default:m(()=>[s(o(i),{title:"Hospital Score Evolution"},{default:m(()=>[s(o(H),{datasets:w.value,"aria-label":"Bars graphic showing the evolution of the total number of treatments and their successes over the months."},null,8,["datasets"])]),_:1}),s(o(i),{title:"Departments Scores"},{default:m(()=>[z("div",R,[(c(!0),_(D,null,E(P.value,t=>(c(),C(o(b),{value:t.totalPerformance.totalTreatments,valueSuccess:t.totalPerformance.totalTreatmentsSuccess,title:t.department,field:"treatments",key:t,"aria-label":"Donut graphic showing the score of success treatments for the department"},null,8,["value","valueSuccess","title"]))),128)),P.value?g("",!0):(c(),_("p",$,"No Data"))])]),_:1})]),_:1}),s(o(S),{title:"Hospitalizations"},{default:m(()=>[s(o(i),{title:"Hospital Score Evolution"},{default:m(()=>[s(o(H),{datasets:A.value,"aria-label":"Bars graphic showing the evolution of the total number of hospitalizations and their successes over the months."},null,8,["datasets"])]),_:1}),s(o(i),{title:"Departments Scores"},{default:m(()=>[z("div",F,[(c(!0),_(D,null,E(P.value,t=>(c(),C(o(b),{value:t.totalPerformance.totalHospitalizations,valueSuccess:t.totalPerformance.totalHospitalizationsSuccess,title:t.department,field:"hospitalizations",key:t,"aria-label":"Donut graphic showing the score of success hospitalizations for the department"},null,8,["value","valueSuccess","title"]))),128)),P.value?g("",!0):(c(),_("p",j,"No Data"))])]),_:1})]),_:1})])]))}},U=M(I,[["__scopeId","data-v-20c4c19e"]]),x=Object.freeze(Object.defineProperty({__proto__:null,default:U},Symbol.toStringTag,{value:"Module"}));export{x as D,M as _};
